{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP 15\\\\Desktop\\\\FreshMarket\\\\my-app\\\\Frontend\\\\src\\\\components\\\\verifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { handleError, handleSuccess } from '../utils';\nimport './css/verifyEmail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Assuming a 6-digit verification code\n  const [codeDigits, setCodeDigits] = useState(['', '', '', '', '', '']);\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    var _location$state;\n    // Initialize the array of refs\n    inputRefs.current = inputRefs.current.slice(0, codeDigits.length);\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.formData) {\n      setUserData(location.state.formData);\n    } else {\n      handleError(\"Session expired. Please try signing up again.\");\n      navigate('/signup');\n    }\n  }, [location.state, navigate, codeDigits.length]); // Added codeDigits.length as dependency\n\n  // Combine all digits into a single verification code\n  const getVerificationCode = () => codeDigits.join('');\n\n  // Handle change for each digit input\n  const handleDigitChange = (index, value) => {\n    // Only allow numbers\n    if (!/^\\d*$/.test(value)) return;\n    const newCodeDigits = [...codeDigits];\n    newCodeDigits[index] = value.slice(0, 1);\n    setCodeDigits(newCodeDigits);\n\n    // Auto-focus next input if value is added\n    if (value && index < codeDigits.length - 1) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n\n  // Handle keydown for navigation between inputs using backspace\n  const handleKeyDown = (index, e) => {\n    // If backspace is pressed and current field is empty, focus previous field\n    if (e.key === 'Backspace' && !codeDigits[index] && index > 0) {\n      inputRefs.current[index - 1].focus();\n    }\n  };\n\n  // Handle paste event to distribute digits\n  const handlePaste = e => {\n    e.preventDefault();\n    const pasteData = e.clipboardData.getData('text').trim();\n\n    // Check if the pasted content is a valid number\n    if (!/^\\d+$/.test(pasteData)) return;\n    const digits = pasteData.split('').slice(0, codeDigits.length);\n    const newCodeDigits = [...codeDigits];\n\n    // Fill the digits array with the pasted values\n    digits.forEach((digit, index) => {\n      newCodeDigits[index] = digit;\n    });\n    setCodeDigits(newCodeDigits);\n\n    // Focus the next empty input or the last input\n    const nextEmptyIndex = newCodeDigits.findIndex(digit => !digit);\n    if (nextEmptyIndex !== -1 && nextEmptyIndex < codeDigits.length) {\n      inputRefs.current[nextEmptyIndex].focus();\n    } else if (digits.length < codeDigits.length) {\n      inputRefs.current[digits.length].focus();\n    } else {\n      inputRefs.current[codeDigits.length - 1].focus();\n    }\n  };\n  const handleVerify = async e => {\n    e.preventDefault();\n    const verificationCode = getVerificationCode();\n    if (verificationCode.length !== codeDigits.length) {\n      return handleError('Please enter the complete verification code');\n    }\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-email\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          code: verificationCode\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || \"Verification failed\");\n      }\n      handleSuccess(\"Email verified successfully!\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 2000);\n    } catch (error) {\n      handleError(error.message || \"Verification failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleResendCode = async e => {\n    e.preventDefault();\n    if (!(userData !== null && userData !== void 0 && userData.email)) return;\n    try {\n      setIsLoading(true);\n      handleSuccess(\"A new verification code has been sent to your email.\");\n    } catch (error) {\n      handleError(\"Failed to resend verification code.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"verify-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verify Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"We've sent a verification code to \", userData === null || userData === void 0 ? void 0 : userData.email, \". Please enter it below to complete your registration.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleVerify,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"verificationCode\",\n            children: \"Verification Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"verification-code-container\",\n            onPaste: handlePaste,\n            children: codeDigits.map((digit, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: el => inputRefs.current[index] = el,\n              type: \"text\",\n              className: \"code-input\",\n              value: digit,\n              onChange: e => handleDigitChange(index, e.target.value),\n              onKeyDown: e => handleKeyDown(index, e),\n              maxLength: 1,\n              autoFocus: index === 0,\n              \"aria-label\": `Digit ${index + 1}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"verify-btn\",\n          disabled: isLoading,\n          children: isLoading ? 'Verifying...' : 'Verify Email & Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resend-code\",\n        onClick: handleResendCode,\n        disabled: isLoading,\n        children: \"Didn't receive a code? Resend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyEmail, \"iC9sEpqR025JRrF61l1knJ7Hq8E=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","useNavigate","ToastContainer","handleError","handleSuccess","jsxDEV","_jsxDEV","VerifyEmail","_s","location","navigate","userData","setUserData","isLoading","setIsLoading","codeDigits","setCodeDigits","inputRefs","_location$state","current","slice","length","state","formData","getVerificationCode","join","handleDigitChange","index","value","test","newCodeDigits","focus","handleKeyDown","e","key","handlePaste","preventDefault","pasteData","clipboardData","getData","trim","digits","split","forEach","digit","nextEmptyIndex","findIndex","handleVerify","verificationCode","response","fetch","method","body","JSON","stringify","code","headers","result","json","ok","Error","message","setTimeout","error","handleResendCode","email","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onPaste","map","ref","el","type","onChange","target","onKeyDown","maxLength","autoFocus","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP 15/Desktop/FreshMarket/my-app/Frontend/src/components/verifyEmail.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { handleError, handleSuccess } from '../utils';\r\nimport './css/verifyEmail.css';\r\n\r\nconst VerifyEmail = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [userData, setUserData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Assuming a 6-digit verification code\r\n  const [codeDigits, setCodeDigits] = useState(['', '', '', '', '', '']);\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Initialize the array of refs\r\n    inputRefs.current = inputRefs.current.slice(0, codeDigits.length);\r\n    \r\n    if (location.state?.formData) {\r\n      setUserData(location.state.formData);\r\n    } else {\r\n      handleError(\"Session expired. Please try signing up again.\");\r\n      navigate('/signup');\r\n    }\r\n  }, [location.state, navigate, codeDigits.length]); // Added codeDigits.length as dependency\r\n\r\n  // Combine all digits into a single verification code\r\n  const getVerificationCode = () => codeDigits.join('');\r\n\r\n  // Handle change for each digit input\r\n  const handleDigitChange = (index, value) => {\r\n    // Only allow numbers\r\n    if (!/^\\d*$/.test(value)) return;\r\n    \r\n    const newCodeDigits = [...codeDigits];\r\n    newCodeDigits[index] = value.slice(0, 1);\r\n    setCodeDigits(newCodeDigits);\r\n    \r\n    // Auto-focus next input if value is added\r\n    if (value && index < codeDigits.length - 1) {\r\n      inputRefs.current[index + 1].focus();\r\n    }\r\n  };\r\n\r\n  // Handle keydown for navigation between inputs using backspace\r\n  const handleKeyDown = (index, e) => {\r\n    // If backspace is pressed and current field is empty, focus previous field\r\n    if (e.key === 'Backspace' && !codeDigits[index] && index > 0) {\r\n      inputRefs.current[index - 1].focus();\r\n    }\r\n  };\r\n\r\n  // Handle paste event to distribute digits\r\n  const handlePaste = (e) => {\r\n    e.preventDefault();\r\n    const pasteData = e.clipboardData.getData('text').trim();\r\n    \r\n    // Check if the pasted content is a valid number\r\n    if (!/^\\d+$/.test(pasteData)) return;\r\n    \r\n    const digits = pasteData.split('').slice(0, codeDigits.length);\r\n    const newCodeDigits = [...codeDigits];\r\n    \r\n    // Fill the digits array with the pasted values\r\n    digits.forEach((digit, index) => {\r\n      newCodeDigits[index] = digit;\r\n    });\r\n    \r\n    setCodeDigits(newCodeDigits);\r\n    \r\n    // Focus the next empty input or the last input\r\n    const nextEmptyIndex = newCodeDigits.findIndex(digit => !digit);\r\n    if (nextEmptyIndex !== -1 && nextEmptyIndex < codeDigits.length) {\r\n      inputRefs.current[nextEmptyIndex].focus();\r\n    } else if (digits.length < codeDigits.length) {\r\n      inputRefs.current[digits.length].focus();\r\n    } else {\r\n      inputRefs.current[codeDigits.length - 1].focus();\r\n    }\r\n  };\r\n\r\n  const handleVerify = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const verificationCode = getVerificationCode();\r\n    \r\n    if (verificationCode.length !== codeDigits.length) {\r\n      return handleError('Please enter the complete verification code');\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-email\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ code: verificationCode }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(result.message || \"Verification failed\");\r\n      }\r\n\r\n      handleSuccess(\"Email verified successfully!\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 2000);\r\n\r\n    } catch (error) {\r\n      handleError(error.message || \"Verification failed. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResendCode = async (e) => {\r\n    e.preventDefault();\r\n    if (!userData?.email) return;\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      handleSuccess(\"A new verification code has been sent to your email.\");\r\n    } catch (error) {\r\n      handleError(\"Failed to resend verification code.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"verify-section\">\r\n        <h2>Verify Your Email</h2>\r\n        <p>We've sent a verification code to {userData?.email}. Please enter it below to complete your registration.</p>\r\n\r\n        <form onSubmit={handleVerify}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"verificationCode\">Verification Code</label>\r\n            \r\n            <div className=\"verification-code-container\" onPaste={handlePaste}>\r\n              {codeDigits.map((digit, index) => (\r\n                <input\r\n                  key={index}\r\n                  ref={el => inputRefs.current[index] = el}\r\n                  type=\"text\"\r\n                  className=\"code-input\"\r\n                  value={digit}\r\n                  onChange={(e) => handleDigitChange(index, e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(index, e)}\r\n                  maxLength={1}\r\n                  autoFocus={index === 0}\r\n                  aria-label={`Digit ${index + 1}`}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"verify-btn\" disabled={isLoading}>\r\n            {isLoading ? 'Verifying...' : 'Verify Email & Create Account'}\r\n          </button>\r\n        </form>\r\n\r\n        <button \r\n          className=\"resend-code\" \r\n          onClick={handleResendCode}\r\n          disabled={isLoading}\r\n        >\r\n          Didn't receive a code? Resend\r\n        </button>\r\n\r\n        <ToastContainer />\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,UAAU;AACrD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACtE,MAAMoB,SAAS,GAAGlB,MAAM,CAAC,EAAE,CAAC;EAE5BD,SAAS,CAAC,MAAM;IAAA,IAAAoB,eAAA;IACd;IACAD,SAAS,CAACE,OAAO,GAAGF,SAAS,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,EAAEL,UAAU,CAACM,MAAM,CAAC;IAEjE,KAAAH,eAAA,GAAIT,QAAQ,CAACa,KAAK,cAAAJ,eAAA,eAAdA,eAAA,CAAgBK,QAAQ,EAAE;MAC5BX,WAAW,CAACH,QAAQ,CAACa,KAAK,CAACC,QAAQ,CAAC;IACtC,CAAC,MAAM;MACLpB,WAAW,CAAC,+CAA+C,CAAC;MAC5DO,QAAQ,CAAC,SAAS,CAAC;IACrB;EACF,CAAC,EAAE,CAACD,QAAQ,CAACa,KAAK,EAAEZ,QAAQ,EAAEK,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMG,mBAAmB,GAAGA,CAAA,KAAMT,UAAU,CAACU,IAAI,CAAC,EAAE,CAAC;;EAErD;EACA,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C;IACA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;IAE1B,MAAME,aAAa,GAAG,CAAC,GAAGf,UAAU,CAAC;IACrCe,aAAa,CAACH,KAAK,CAAC,GAAGC,KAAK,CAACR,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACxCJ,aAAa,CAACc,aAAa,CAAC;;IAE5B;IACA,IAAIF,KAAK,IAAID,KAAK,GAAGZ,UAAU,CAACM,MAAM,GAAG,CAAC,EAAE;MAC1CJ,SAAS,CAACE,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACL,KAAK,EAAEM,CAAC,KAAK;IAClC;IACA,IAAIA,CAAC,CAACC,GAAG,KAAK,WAAW,IAAI,CAACnB,UAAU,CAACY,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;MAC5DV,SAAS,CAACE,OAAO,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMI,WAAW,GAAIF,CAAC,IAAK;IACzBA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAGJ,CAAC,CAACK,aAAa,CAACC,OAAO,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC;;IAExD;IACA,IAAI,CAAC,OAAO,CAACX,IAAI,CAACQ,SAAS,CAAC,EAAE;IAE9B,MAAMI,MAAM,GAAGJ,SAAS,CAACK,KAAK,CAAC,EAAE,CAAC,CAACtB,KAAK,CAAC,CAAC,EAAEL,UAAU,CAACM,MAAM,CAAC;IAC9D,MAAMS,aAAa,GAAG,CAAC,GAAGf,UAAU,CAAC;;IAErC;IACA0B,MAAM,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEjB,KAAK,KAAK;MAC/BG,aAAa,CAACH,KAAK,CAAC,GAAGiB,KAAK;IAC9B,CAAC,CAAC;IAEF5B,aAAa,CAACc,aAAa,CAAC;;IAE5B;IACA,MAAMe,cAAc,GAAGf,aAAa,CAACgB,SAAS,CAACF,KAAK,IAAI,CAACA,KAAK,CAAC;IAC/D,IAAIC,cAAc,KAAK,CAAC,CAAC,IAAIA,cAAc,GAAG9B,UAAU,CAACM,MAAM,EAAE;MAC/DJ,SAAS,CAACE,OAAO,CAAC0B,cAAc,CAAC,CAACd,KAAK,CAAC,CAAC;IAC3C,CAAC,MAAM,IAAIU,MAAM,CAACpB,MAAM,GAAGN,UAAU,CAACM,MAAM,EAAE;MAC5CJ,SAAS,CAACE,OAAO,CAACsB,MAAM,CAACpB,MAAM,CAAC,CAACU,KAAK,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLd,SAAS,CAACE,OAAO,CAACJ,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC,CAACU,KAAK,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAOd,CAAC,IAAK;IAChCA,CAAC,CAACG,cAAc,CAAC,CAAC;IAElB,MAAMY,gBAAgB,GAAGxB,mBAAmB,CAAC,CAAC;IAE9C,IAAIwB,gBAAgB,CAAC3B,MAAM,KAAKN,UAAU,CAACM,MAAM,EAAE;MACjD,OAAOlB,WAAW,CAAC,6CAA6C,CAAC;IACnE;IAEAW,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMmC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEP;QAAiB,CAAC,CAAC;QAChDQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAEpC,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,qBAAqB,CAAC;MAC1D;MAEAzD,aAAa,CAAC,8BAA8B,CAAC;MAE7C0D,UAAU,CAAC,MAAM;QACfpD,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOqD,KAAK,EAAE;MACd5D,WAAW,CAAC4D,KAAK,CAACF,OAAO,IAAI,wCAAwC,CAAC;IACxE,CAAC,SAAS;MACR/C,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMkD,gBAAgB,GAAG,MAAO/B,CAAC,IAAK;IACpCA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClB,IAAI,EAACzB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEsD,KAAK,GAAE;IAEtB,IAAI;MACFnD,YAAY,CAAC,IAAI,CAAC;MAElBV,aAAa,CAAC,sDAAsD,CAAC;IACvE,CAAC,CAAC,OAAO2D,KAAK,EAAE;MACd5D,WAAW,CAAC,qCAAqC,CAAC;IACpD,CAAC,SAAS;MACRW,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAA4D,QAAA,eACE5D,OAAA;MAAS6D,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBACjC5D,OAAA;QAAA4D,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BjE,OAAA;QAAA4D,QAAA,GAAG,oCAAkC,EAACvD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsD,KAAK,EAAC,wDAAsD;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEhHjE,OAAA;QAAMkE,QAAQ,EAAEzB,YAAa;QAAAmB,QAAA,gBAC3B5D,OAAA;UAAK6D,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACzB5D,OAAA;YAAOmE,OAAO,EAAC,kBAAkB;YAAAP,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAE3DjE,OAAA;YAAK6D,SAAS,EAAC,6BAA6B;YAACO,OAAO,EAAEvC,WAAY;YAAA+B,QAAA,EAC/DnD,UAAU,CAAC4D,GAAG,CAAC,CAAC/B,KAAK,EAAEjB,KAAK,kBAC3BrB,OAAA;cAEEsE,GAAG,EAAEC,EAAE,IAAI5D,SAAS,CAACE,OAAO,CAACQ,KAAK,CAAC,GAAGkD,EAAG;cACzCC,IAAI,EAAC,MAAM;cACXX,SAAS,EAAC,YAAY;cACtBvC,KAAK,EAAEgB,KAAM;cACbmC,QAAQ,EAAG9C,CAAC,IAAKP,iBAAiB,CAACC,KAAK,EAAEM,CAAC,CAAC+C,MAAM,CAACpD,KAAK,CAAE;cAC1DqD,SAAS,EAAGhD,CAAC,IAAKD,aAAa,CAACL,KAAK,EAAEM,CAAC,CAAE;cAC1CiD,SAAS,EAAE,CAAE;cACbC,SAAS,EAAExD,KAAK,KAAK,CAAE;cACvB,cAAY,SAASA,KAAK,GAAG,CAAC;YAAG,GAT5BA,KAAK;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUX,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjE,OAAA;UAAQwE,IAAI,EAAC,QAAQ;UAACX,SAAS,EAAC,YAAY;UAACiB,QAAQ,EAAEvE,SAAU;UAAAqD,QAAA,EAC9DrD,SAAS,GAAG,cAAc,GAAG;QAA+B;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEPjE,OAAA;QACE6D,SAAS,EAAC,aAAa;QACvBkB,OAAO,EAAErB,gBAAiB;QAC1BoB,QAAQ,EAAEvE,SAAU;QAAAqD,QAAA,EACrB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETjE,OAAA,CAACJ,cAAc;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX,CAAC;AAAC/D,EAAA,CAhLID,WAAW;EAAA,QACEP,WAAW,EACXC,WAAW;AAAA;AAAAqF,EAAA,GAFxB/E,WAAW;AAkLjB,eAAeA,WAAW;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}